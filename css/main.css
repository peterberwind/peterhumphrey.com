/*! normalize.css v4.2.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

.highlight {
  background: #ffffff; }

.highlight .c {
  color: #999988;
  font-style: italic; }

/* Comment */
.highlight .err {
  color: #a61717;
  background-color: #e3d2d2; }

/* Error */
.highlight .k {
  font-weight: bold; }

/* Keyword */
.highlight .o {
  font-weight: bold; }

/* Operator */
.highlight .cm {
  color: #999988;
  font-style: italic; }

/* Comment.Multiline */
.highlight .cp {
  color: #999999;
  font-weight: bold; }

/* Comment.Preproc */
.highlight .c1 {
  color: #999988;
  font-style: italic; }

/* Comment.Single */
.highlight .cs {
  color: #999999;
  font-weight: bold;
  font-style: italic; }

/* Comment.Special */
.highlight .gd {
  color: #000000;
  background-color: #ffdddd; }

/* Generic.Deleted */
.highlight .gd .x {
  color: #000000;
  background-color: #ffaaaa; }

/* Generic.Deleted.Specific */
.highlight .ge {
  font-style: italic; }

/* Generic.Emph */
.highlight .gr {
  color: #aa0000; }

/* Generic.Error */
.highlight .gh {
  color: #999999; }

/* Generic.Heading */
.highlight .gi {
  color: #000000;
  background-color: #ddffdd; }

/* Generic.Inserted */
.highlight .gi .x {
  color: #000000;
  background-color: #aaffaa; }

/* Generic.Inserted.Specific */
.highlight .go {
  color: #888888; }

/* Generic.Output */
.highlight .gp {
  color: #555555; }

/* Generic.Prompt */
.highlight .gs {
  font-weight: bold; }

/* Generic.Strong */
.highlight .gu {
  color: #aaaaaa; }

/* Generic.Subheading */
.highlight .gt {
  color: #aa0000; }

/* Generic.Traceback */
.highlight .kc {
  font-weight: bold; }

/* Keyword.Constant */
.highlight .kd {
  font-weight: bold; }

/* Keyword.Declaration */
.highlight .kp {
  font-weight: bold; }

/* Keyword.Pseudo */
.highlight .kr {
  font-weight: bold; }

/* Keyword.Reserved */
.highlight .kt {
  color: #445588;
  font-weight: bold; }

/* Keyword.Type */
.highlight .m {
  color: #009999; }

/* Literal.Number */
.highlight .s {
  color: #d14; }

/* Literal.String */
.highlight .na {
  color: #008080; }

/* Name.Attribute */
.highlight .nb {
  color: #0086B3; }

/* Name.Builtin */
.highlight .nc {
  color: #445588;
  font-weight: bold; }

/* Name.Class */
.highlight .no {
  color: #008080; }

/* Name.Constant */
.highlight .ni {
  color: #800080; }

/* Name.Entity */
.highlight .ne {
  color: #990000;
  font-weight: bold; }

/* Name.Exception */
.highlight .nf {
  color: #990000;
  font-weight: bold; }

/* Name.Function */
.highlight .nn {
  color: #555555; }

/* Name.Namespace */
.highlight .nt {
  color: #000080; }

/* Name.Tag */
.highlight .nv {
  color: #008080; }

/* Name.Variable */
.highlight .ow {
  font-weight: bold; }

/* Operator.Word */
.highlight .w {
  color: #bbbbbb; }

/* Text.Whitespace */
.highlight .mf {
  color: #009999; }

/* Literal.Number.Float */
.highlight .mh {
  color: #009999; }

/* Literal.Number.Hex */
.highlight .mi {
  color: #009999; }

/* Literal.Number.Integer */
.highlight .mo {
  color: #009999; }

/* Literal.Number.Oct */
.highlight .sb {
  color: #d14; }

/* Literal.String.Backtick */
.highlight .sc {
  color: #d14; }

/* Literal.String.Char */
.highlight .sd {
  color: #d14; }

/* Literal.String.Doc */
.highlight .s2 {
  color: #d14; }

/* Literal.String.Double */
.highlight .se {
  color: #d14; }

/* Literal.String.Escape */
.highlight .sh {
  color: #d14; }

/* Literal.String.Heredoc */
.highlight .si {
  color: #d14; }

/* Literal.String.Interpol */
.highlight .sx {
  color: #d14; }

/* Literal.String.Other */
.highlight .sr {
  color: #009926; }

/* Literal.String.Regex */
.highlight .s1 {
  color: #d14; }

/* Literal.String.Single */
.highlight .ss {
  color: #990073; }

/* Literal.String.Symbol */
.highlight .bp {
  color: #999999; }

/* Name.Builtin.Pseudo */
.highlight .vc {
  color: #008080; }

/* Name.Variable.Class */
.highlight .vg {
  color: #008080; }

/* Name.Variable.Global */
.highlight .vi {
  color: #008080; }

/* Name.Variable.Instance */
.highlight .il {
  color: #009999; }

/* Literal.Number.Integer.Long */
button, input[type="button"], input[type="reset"], input[type="submit"] {
  appearance: none;
  background-color: #1565c0;
  border: 0;
  border-radius: 3px;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: "Open Sans", sans-serif;
  font-size: 1em;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  line-height: 1;
  padding: 0.75em 1.5em;
  text-decoration: none;
  transition: background-color 5s ease;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  vertical-align: middle;
  white-space: nowrap; }
  button:hover, button:focus, input[type="button"]:hover, input[type="button"]:focus, input[type="reset"]:hover, input[type="reset"]:focus, input[type="submit"]:hover, input[type="submit"]:focus {
    background-color: #11519a;
    color: #fff; }
  button:disabled, input[type="button"]:disabled, input[type="reset"]:disabled, input[type="submit"]:disabled {
    cursor: not-allowed;
    opacity: 0.5; }
    button:disabled:hover, input[type="button"]:disabled:hover, input[type="reset"]:disabled:hover, input[type="submit"]:disabled:hover {
      background-color: #1565c0; }

@font-face {
  font-family: 'Fort';
  src: url("../fonts/FortBook.eot");
  src: url("../fonts/FortBook.eot") format("embedded-opentype"), url("../fonts/FortBook.woff2") format("woff2"), url("../fonts/FortBook.woff") format("woff"), url("../fonts/FortBook.ttf") format("truetype"), url("../fonts/FortBook.svg#FortBook") format("svg");
  font-weight: normal; }

@font-face {
  font-family: 'Fort';
  src: url("../fonts/FortBold.eot");
  src: url("../fonts/FortBold.eot") format("embedded-opentype"), url("../fonts/FortBold.woff2") format("woff2"), url("../fonts/FortBold.woff") format("woff"), url("../fonts/FortBold.ttf") format("truetype"), url("../fonts/FortBold.svg#FortBold") format("svg");
  font-weight: 500; }

@font-face {
  font-family: 'Freight';
  src: url("../fonts/FreightTextProBook.eot");
  src: url("../fonts/FreightTextProBook.eot") format("embedded-opentype"), url("../fonts/FreightTextProBook.woff2") format("woff2"), url("../fonts/FreightTextProBook.woff") format("woff"), url("../fonts/FreightTextProBook.ttf") format("truetype"), url("../fonts/FreightTextProBook.svg#FreightTextProBook") format("svg");
  font-weight: normal; }

@font-face {
  font-family: 'FreightTextProBold';
  src: url("../fonts/FreightTextProBold.eot");
  src: url("../fonts/FreightTextProBold.eot") format("embedded-opentype"), url("../fonts/FreightTextProBold.woff2") format("woff2"), url("../fonts/FreightTextProBold.woff") format("woff"), url("../fonts/FreightTextProBold.ttf") format("truetype"), url("../fonts/FreightTextProBold.svg#FreightTextProBold") format("svg");
  font-weight: 500; }

fieldset {
  background-color: transparent;
  border: 0;
  margin: 0;
  padding: 0; }

legend {
  font-weight: 600;
  margin-bottom: 0.375em;
  padding: 0; }

label {
  display: block;
  font-weight: 600;
  margin-bottom: 0.375em; }

input,
select,
textarea {
  display: block;
  font-family: "Open Sans", sans-serif;
  font-size: 1em; }

input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"], input:not([type]), textarea,
select[multiple] {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 3px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06);
  box-sizing: border-box;
  margin-bottom: 0.75em;
  padding: 0.5em;
  transition: border-color 5s ease;
  width: 100%; }
  input[type="color"]:hover, input[type="date"]:hover, input[type="datetime"]:hover, input[type="datetime-local"]:hover, input[type="email"]:hover, input[type="month"]:hover, input[type="number"]:hover, input[type="password"]:hover, input[type="search"]:hover, input[type="tel"]:hover, input[type="text"]:hover, input[type="time"]:hover, input[type="url"]:hover, input[type="week"]:hover, input:not([type]):hover, textarea:hover,
  select[multiple]:hover {
    border-color: #b1b1b1; }
  input[type="color"]:focus, input[type="date"]:focus, input[type="datetime"]:focus, input[type="datetime-local"]:focus, input[type="email"]:focus, input[type="month"]:focus, input[type="number"]:focus, input[type="password"]:focus, input[type="search"]:focus, input[type="tel"]:focus, input[type="text"]:focus, input[type="time"]:focus, input[type="url"]:focus, input[type="week"]:focus, input:not([type]):focus, textarea:focus,
  select[multiple]:focus {
    border-color: #1565c0;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06), 0 0 5px rgba(18, 89, 169, 0.7);
    outline: none; }
  input[type="color"]:disabled, input[type="date"]:disabled, input[type="datetime"]:disabled, input[type="datetime-local"]:disabled, input[type="email"]:disabled, input[type="month"]:disabled, input[type="number"]:disabled, input[type="password"]:disabled, input[type="search"]:disabled, input[type="tel"]:disabled, input[type="text"]:disabled, input[type="time"]:disabled, input[type="url"]:disabled, input[type="week"]:disabled, input:not([type]):disabled, textarea:disabled,
  select[multiple]:disabled {
    background-color: #f2f2f2;
    cursor: not-allowed; }
    input[type="color"]:disabled:hover, input[type="date"]:disabled:hover, input[type="datetime"]:disabled:hover, input[type="datetime-local"]:disabled:hover, input[type="email"]:disabled:hover, input[type="month"]:disabled:hover, input[type="number"]:disabled:hover, input[type="password"]:disabled:hover, input[type="search"]:disabled:hover, input[type="tel"]:disabled:hover, input[type="text"]:disabled:hover, input[type="time"]:disabled:hover, input[type="url"]:disabled:hover, input[type="week"]:disabled:hover, input:not([type]):disabled:hover, textarea:disabled:hover,
    select[multiple]:disabled:hover {
      border: 1px solid #ddd; }
  input[type="color"]::-webkit-input-placeholder, input[type="date"]::-webkit-input-placeholder, input[type="datetime"]::-webkit-input-placeholder, input[type="datetime-local"]::-webkit-input-placeholder, input[type="email"]::-webkit-input-placeholder, input[type="month"]::-webkit-input-placeholder, input[type="number"]::-webkit-input-placeholder, input[type="password"]::-webkit-input-placeholder, input[type="search"]::-webkit-input-placeholder, input[type="tel"]::-webkit-input-placeholder, input[type="text"]::-webkit-input-placeholder, input[type="time"]::-webkit-input-placeholder, input[type="url"]::-webkit-input-placeholder, input[type="week"]::-webkit-input-placeholder, input:not([type])::-webkit-input-placeholder, textarea::-webkit-input-placeholder,
  select[multiple]::-webkit-input-placeholder {
    color: #999; }
  input[type="color"]::-moz-placeholder, input[type="date"]::-moz-placeholder, input[type="datetime"]::-moz-placeholder, input[type="datetime-local"]::-moz-placeholder, input[type="email"]::-moz-placeholder, input[type="month"]::-moz-placeholder, input[type="number"]::-moz-placeholder, input[type="password"]::-moz-placeholder, input[type="search"]::-moz-placeholder, input[type="tel"]::-moz-placeholder, input[type="text"]::-moz-placeholder, input[type="time"]::-moz-placeholder, input[type="url"]::-moz-placeholder, input[type="week"]::-moz-placeholder, input:not([type])::-moz-placeholder, textarea::-moz-placeholder,
  select[multiple]::-moz-placeholder {
    color: #999; }
  input[type="color"]:-ms-input-placeholder, input[type="date"]:-ms-input-placeholder, input[type="datetime"]:-ms-input-placeholder, input[type="datetime-local"]:-ms-input-placeholder, input[type="email"]:-ms-input-placeholder, input[type="month"]:-ms-input-placeholder, input[type="number"]:-ms-input-placeholder, input[type="password"]:-ms-input-placeholder, input[type="search"]:-ms-input-placeholder, input[type="tel"]:-ms-input-placeholder, input[type="text"]:-ms-input-placeholder, input[type="time"]:-ms-input-placeholder, input[type="url"]:-ms-input-placeholder, input[type="week"]:-ms-input-placeholder, input:not([type]):-ms-input-placeholder, textarea:-ms-input-placeholder,
  select[multiple]:-ms-input-placeholder {
    color: #999; }
  input[type="color"]::placeholder, input[type="date"]::placeholder, input[type="datetime"]::placeholder, input[type="datetime-local"]::placeholder, input[type="email"]::placeholder, input[type="month"]::placeholder, input[type="number"]::placeholder, input[type="password"]::placeholder, input[type="search"]::placeholder, input[type="tel"]::placeholder, input[type="text"]::placeholder, input[type="time"]::placeholder, input[type="url"]::placeholder, input[type="week"]::placeholder, input:not([type])::placeholder, textarea::placeholder,
  select[multiple]::placeholder {
    color: #999; }

textarea {
  resize: vertical; }

[type="search"] {
  appearance: none; }

[type="checkbox"],
[type="radio"] {
  display: inline;
  margin-right: 0.375em; }

[type="file"] {
  margin-bottom: 0.75em;
  width: 100%; }

select {
  margin-bottom: 0.75em;
  max-width: 100%;
  width: auto; }

html {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  overflow-x: hidden;
  width: 100%;
  font-size: 2.2vh;
  direction: ltr;
  cursor: url("../images/arrow.png"); }

*,
*::before,
*::after {
  box-sizing: inherit; }

ul,
ol {
  list-style-type: none;
  margin: 0;
  padding: 0; }

dl {
  margin: 0; }

dt {
  font-weight: 600;
  margin: 0; }

dd {
  margin: 0; }

figure {
  margin: 0; }

img,
picture {
  margin: 0;
  max-width: 100%; }

svg {
  display: block; }

svg .svgFillin {
  fill: none;
  stroke: #000;
  stroke-width: 1; }

.image {
  padding: 0.6em 0;
  padding-top: 0; }

.svgman {
  fill: blue; }

table {
  border-collapse: collapse;
  margin: 0.75em 0;
  table-layout: fixed;
  width: 100%; }

th {
  border-bottom: 1px solid #a6a6a6;
  font-weight: 600;
  padding: 0.75em 0;
  text-align: left; }

td {
  border-bottom: 1px solid #ddd;
  padding: 0.75em 0; }

tr,
td,
th {
  vertical-align: middle; }

h1 {
  padding-bottom: 1.2em;
  margin: 0;
  font-size: 2.65em;
  font-weight: 400;
  line-height: 1.25;
  color: rgba(0, 0, 0, 0.85); }

p {
  color: rgba(0, 0, 0, 0.85); }

blockquote {
  margin: 0.6em auto;
  padding: 0; }

ul li {
  padding: 0 1em 0.5em;
  margin-left: 1em;
  margin-right: 1em; }

ul li h1 {
  padding: 0; }

::-moz-selection {
  color: #fff;
  background-color: #0000ff; }

::selection {
  color: #fff;
  background-color: #0000ff; }

p {
  margin: 0; }

a {
  color: rgba(0, 0, 0, 0.85);
  text-decoration: none; }
  a:hover, a:visited, a:active {
    color: rgba(0, 0, 0, 0.85);
    text-decoration: none; }

a[href^="http://"]:not([href*="danieleckler.com"]), a[href^="https://"]:not([href*="danieleckler.com"]) {
  cursor: url("../icons/pointright.png") 50 10, auto !important; }

a[href*="danieleckler.com"], a[href*='mailto:'] {
  cursor: url("../icons/point.png"), auto; }

a[href*="danieleckler.com"]:active, a[href*='mailto:']:active {
  cursor: url("../icons/grab.png"), auto; }

u {
  text-decoration: none;
  border-bottom: 0.07em solid; }

h1 {
  padding-left: 0;
  padding-right: 0;
  font-family: 'Fort';
  margin-left: 30px;
  padding-bottom: 0;
  border-bottom: 0.07em solid black;
  cursor: url("../icons/point.png"), auto; }

.aligncenter {
  display: inline-block;
  margin: auto; }

.hide {
  opacity: 0; }

.page {
  text-align: center; }

.each {
  display: inline-block;
  text-align: left;
  width: auto;
  font-size: 2.65em;
  line-height: 1.25;
  font-family: 'Fort';
  font-weight: normal;
  overflow: hidden;
  color: rgba(0, 0, 0, 0.85); }

#main h1, #main blockquote {
  padding-left: 30px;
  padding-right: 30px; }

#main blockquote {
  margin: 20px auto;
  margin-bottom: 1em;
  margin-top: 0.4em;
  max-width: 100%;
  width: 100%;
  box-sizing: border-box; }

#main {
  padding-top: 30px;
  padding-bottom: 30px; }
  #main h1 {
    padding-top: 0.6em;
    padding-bottom: 0.6em; }
    #main h1:first-of-type {
      padding-top: 0; }

#main .back {
  display: inline-block; }

#index {
  padding: 30px;
  padding-bottom: 0;
  width: 100%;
  box-sizing: border-box; }

#index {
  padding-bottom: 30px; }

#index-section a {
  border-bottom: 0.07em solid black; }
  #index-section a:hover {
    color: rgba(0, 0, 0, 0.5);
    border-bottom: 0.07em solid rgba(0, 0, 0, 0.5); }

#index p {
  margin: 0.6em auto; }

.index-work {
  margin: 2em auto; }

#footer-img {
  text-align: center;
  margin-bottom: 1em;
  margin-top: 1em; }
  #footer-img img {
    display: inline-block;
    margin: 0 auto;
    width: 20vw; }

#navbar {
  padding: 0 30px;
  text-align: left;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 45px;
  background-color: white;
  z-index: 999;
  font-family: 'Fort';
  transition: -webkit-transform .5s;
  transition: transform .5s;
  border-bottom: 1px solid black;
  box-shadow: 0px 1px 8px 1px rgba(0, 0, 0, 0.1);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between; }

.navlink {
  font-family: 'Fort';
  font-weight: normal;
  font-size: 18px;
  margin-left: 18px;
  line-height: 45px; }
  .navlink a {
    cursor: url("../images/point.png"), auto; }
    .navlink a:active {
      cursor: url("../images/grab.png"), auto; }
  .navlink:first-of-type {
    margin-left: 10px; }

.hideNavbar {
  -webkit-transform: translateY(-100px);
          transform: translateY(-100px); }

.about-section {
  display: inline;
  -webkit-animation-duration: 3s;
          animation-duration: 3s;
  -webkit-animation-name: IntroFadeIn;
          animation-name: IntroFadeIn;
  -webkit-animation-iteration-count: 1;
          animation-iteration-count: 1; }
  .about-section p {
    margin-bottom: 0;
    margin-top: 0 !important; }

.works-section {
  text-align: justify;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -webkit-animation-duration: 3s;
          animation-duration: 3s;
  -webkit-animation-name: IntroFadeIn;
          animation-name: IntroFadeIn;
  -webkit-animation-iteration-count: 1;
          animation-iteration-count: 1; }

.works-section a {
  cursor: url("../icons/point.png"), auto; }

.works-section a:active {
  cursor: url("../icons/grab.png"), auto; }

#contact {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: justify;
      justify-content: space-between;
  margin-top: 1em;
  margin-bottom: 30px; }
  #contact a {
    cursor: url("../icons/pointright.png"), 56 10 auto; }

#sayHello {
  font-weight: Bold; }

#thanks {
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
  -ms-flex-positive: 1;
      flex-grow: 1; }

#thanks-man {
  border-bottom: 0.07em solid black;
  cursor: url("../icons/grab.png"), auto; }

#links-wrap {
  -ms-flex-preferred-size: 30%;
      flex-basis: 30%;
  line-height: 1.4; }

video::-webkit-media-controls {
  display: none !important; }

.iframe-overlay {
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  position: absolute;
  z-index: 3;
  background-size: cover; }

.video-overlay {
  display: none; }

#video-iframe {
  position: relative;
  padding-bottom: 56%;
  margin: 1em auto;
  margin-top: 1em;
  margin-bottom: 2.6em;
  height: 0; }
  #video-iframe iframe {
    cursor: url("../icons/point.png"), auto !important;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }
    #video-iframe iframe:active {
      cursor: url("../icons/grab.png"), auto !important; }

.video {
  width: 60vw;
  height: auto; }

.video-wrap {
  background-color: #F3F2F2;
  margin: 1em auto;
  position: relative;
  padding: 13vw 20vw;
  display: inline-block; }
  .video-wrap.padding-fam {
    padding: 0 !important; }
  .video-wrap.no {
    padding: 0;
    background-color: transparent; }
    .video-wrap.no .video {
      width: 100%; }

#scrollTop {
  height: 300px;
  width: 300px;
  border: 2px solid black;
  margin-right: 10%;
  margin-top: 50px;
  position: relative;
  cursor: url("../icons/point.png"), auto; }
  #scrollTop:active {
    cursor: url("../icons/grab.png"), auto; }
  #scrollTop #scroll-info {
    position: absolute;
    font-size: 2rem;
    top: 55%;
    width: 300px;
    text-align: center;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }

#scroll-icon {
  width: 64px;
  display: inline-block; }

.case-study {
  font-family: 'Fort';
  font-weight: normal; }
  .case-study a {
    border-bottom: 0.07em solid black;
    cursor: url("../icons/point.png"), auto; }
    .case-study a:active {
      cursor: url("../icons/grab.png"), auto; }
    .case-study a:hover {
      color: rgba(0, 0, 0, 0.5);
      border-bottom: 0.07em solid rgba(0, 0, 0, 0.5); }
  .case-study blockquote a {
    border-bottom: 1px solid black; }
  .case-study p {
    width: 100%;
    max-width: 100%;
    position: relative; }
    .case-study p img {
      -ms-flex-positive: 1;
          flex-grow: 1;
      height: 100%;
      padding: 1em 0;
      padding-top: 1em;
      -ms-flex-preferred-size: 50%;
          flex-basis: 50%;
      padding-bottom: 0.6em;
      width: 100%;
      display: inline-block;
      margin: 0 auto; }
      .case-study p img:first-child:nth-last-child(2), .case-study p img:first-child:nth-last-child(4) {
        width: 50%;
        text-align: center;
        margin: 0 auto; }
        .case-study p img:first-child:nth-last-child(2) ~ img, .case-study p img:first-child:nth-last-child(4) ~ img {
          width: 50%;
          text-align: center;
          margin: 0 auto; }
      .case-study p img:first-child:nth-last-child(2) {
        float: left; }
  .case-study h2 {
    margin: 1em auto;
    margin-bottom: 2em;
    line-height: 1.3;
    max-width: 100%;
    padding: 0 30px;
    width: 100%;
    box-sizing: border-box;
    font-weight: 200;
    font-family: 'Freight'; }

.logo {
  fill: #fff; }

.index-text {
  text-align: left;
  display: inline-block;
  width: 100%;
  overflow: hidden; }
  .index-text a {
    border-bottom: 4px solid black; }

.images-wrap {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  padding: 0 1em;
  padding-top: 0;
  position: relative;
  margin: 1.6em auto;
  top: -150px; }

.full-img {
  width: 100%; }
  .full-img .image-holder .marquee-text {
    font-size: 7em; }

.half .image-holder {
  overflow-x: hidden; }
  .half .image-holder img {
    max-height: 520px; }

.image-holder {
  position: relative;
  height: auto;
  width: auto;
  margin-bottom: -15px;
  -ms-flex-pack: center;
      justify-content: center;
  max-width: 65%; }
  .image-holder img {
    position: absolute;
    max-width: 100%;
    top: 0;
    left: 0; }
    .image-holder img:first-of-type {
      position: relative; }

.caption, blockquote {
  font-size: 1.4rem;
  display: inline-block;
  text-align: center;
  width: 100%;
  max-width: 100%;
  line-height: 1.25;
  font-weight: 200;
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
  font-family: ' Freight'; }

.index-text.indexText blockquote {
  font-size: 1.4rem;
  display: inline-block;
  min-height: 55px;
  text-align: center;
  vertical-align: top;
  padding-top: 0px;
  margin-top: 1em;
  margin-bottom: 0.6em;
  width: 100%; }
  .index-text.indexText blockquote p {
    margin-top: 0;
    margin: 0;
    display: inline-block;
    max-width: 1300px; }

.caption {
  margin: 0 auto;
  margin-top: 1.4em; }

.marquee {
  display: block;
  left: 0;
  position: absolute;
  top: 0; }

.marquee2 {
  display: none; }

.marquee-text {
  font-size: 4em;
  z-index: 100;
  color: black;
  white-space: nowrap;
  position: absolute;
  top: 50%;
  left: 110%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  mix-blend-mode: difference;
  color: #FFFF00; }

#marquee-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

#marquee-wrap {
  background: rgba(0, 0, 0, 0.9);
  position: relative;
  height: 100%;
  width: 100%;
  opacity: 0; }

.marquee2 {
  display: none; }

.icon {
  width: 38px;
  height: 38px;
  margin-left: 5px;
  margin-right: 5px;
  /*transform: translateY(9px);*/
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
  display: inline-block; }

#icon1 {
  background-image: url("../icons/cereal2.jpg"); }

#icon2 {
  -webkit-animation: iconsloop 1.5s infinite step-end;
          animation: iconsloop 1.5s infinite step-end;
  -webkit-animation-play-state: paused;
          animation-play-state: paused; }

#icon3 {
  background-image: url("../icons/mac.jpg"); }

#strat:hover #icon2 {
  -webkit-animation-play-state: running;
          animation-play-state: running; }

#title-svg svg {
  position: fixed;
  top: 50%;
  left: 50%;
  -webkit-animation-name: rotateAndLeave;
          animation-name: rotateAndLeave;
  -webkit-animation-duration: 3s;
          animation-duration: 3s;
  -webkit-animation-iteration-count: 1;
          animation-iteration-count: 1;
  -webkit-transform: translate(200%, -200%);
          transform: translate(200%, -200%);
  width: 30vmax;
  z-index: 2; }

#title {
  display: inline;
  z-index: 3;
  -webkit-animation: titleFadeUp 3s 1;
          animation: titleFadeUp 3s 1; }

#game {
  height: 400px; }

#game-container {
  position: relative;
  height: 400px;
  width: 400px; }

#custom-level-dialog {
  display: none;
  position: absolute;
  top: 30px;
  left: 15px;
  z-index: 3;
  width: 200px; }

.title-bar {
  height: 25px;
  background: #3d95ff url("http://dl.dropboxusercontent.com/u/13142135/codepen/minesweeper.png") no-repeat;
  font-size: 0;
  line-height: 0; }

#custom-title-bar {
  background-position: 0 -110px; }

#custom-dialog-content {
  overflow: hidden;
  font: 12px arial;
  padding: 35px 15px; }

#minesweeper-custom-fields {
  float: left; }
  #minesweeper-custom-fields p {
    clear: left;
    margin: 0;
    padding: 0;
    margin-bottom: 4px; }
  #minesweeper-custom-fields label {
    float: left;
    width: 47px;
    padding-top: 3px; }

#high-score-dialog label {
  float: left;
  width: 47px;
  padding-top: 3px; }

#minesweeper-custom-buttons {
  float: right; }

.form-button {
  display: block;
  width: 60px;
  height: 25px;
  background: #ece9d8; }

#minesweeper-ok-btn {
  margin-bottom: 18px; }

#high-score-dialog {
  display: none;
  position: absolute;
  top: 10px;
  left: 15px;
  z-index: 4;
  width: 200px; }

#high-score-dialog-content {
  overflow: hidden;
  font: 12px arial;
  padding: 10px; }

#high-score-dialog h2 {
  font-size: 14px;
  font-weight: bold;
  text-transform: uppercase;
  text-align: center; }

#high-score-dialog #high-score-name-label {
  width: 40px; }

#high-score-name-textbox {
  width: 120px; }

#submit-high-score-container {
  text-align: center; }

#submit-high-score {
  width: auto; }

#minesweeper-board-wrapper {
  position: relative;
  background-color: #bdbdbd;
  padding: 7px;
  border-left: 3px solid #fff;
  border-top: 3px solid #fff; }

#minesweeper-title-bar {
  background-position: 0 -84px; }

/* begin menu */
#menu-link-container {
  overflow: hidden;
  padding-top: 1px; }

#menu-link {
  float: left;
  padding: 3px 6px;
  color: #000;
  text-decoration: none;
  cursor: default;
  font: 12px arial; }
  #menu-link:hover, #menu-link.active {
    color: #fff;
    background: #316ac5; }

#menu {
  display: none;
  position: absolute;
  top: -4px;
  left: -3px;
  z-index: 2;
  list-style: none;
  width: 122px;
  margin: 0;
  padding: 2px;
  background: #fff;
  border: 1px solid #aca899;
  font: 12px arial; }
  #menu li {
    display: block;
    margin: 0;
    padding: 4px 5px 4px 16px;
    color: #000;
    text-decoration: none;
    cursor: default; }
    #menu li:hover {
      color: #fff;
      background-color: #316ac5; }
    #menu li.checked {
      background-image: url("http://dl.dropboxusercontent.com/u/13142135/codepen/minesweeper.png");
      background-repeat: no-repeat;
      background-position: -136px -41px; }
      #menu li.checked:hover {
        background-position: -134px -69px; }
    #menu li.menu-divider {
      font-size: 0;
      line-height: 0;
      height: 0;
      border-bottom: 1px solid #aca899;
      margin: 5px 1px;
      padding: 0; }

/* end menu */
#minesweeper-header-container {
  padding: 3px 5px;
  border: 2px solid;
  border-color: #7d7d7d #fff #fff #7d7d7d; }

#minesweeper-header-wrapper {
  border-bottom: 7px solid #bdbdbd; }

#minesweeper-header {
  position: relative;
  overflow: hidden; }

#minefield {
  overflow: hidden;
  border: 3px solid;
  border-color: #7d7d7d #fff #fff #7d7d7d; }
  #minefield div {
    float: left;
    width: 16px;
    height: 16px;
    background: url("http://dl.dropboxusercontent.com/u/13142135/codepen/minesweeper.png") no-repeat; }
  #minefield .covered {
    background-position: 0 -39px; }
  #minefield .mines0 {
    background-position: 0 -23px; }
  #minefield .mines1 {
    background-position: -16px -23px; }
  #minefield .mines2 {
    background-position: -32px -23px; }
  #minefield .mines3 {
    background-position: -48px -23px; }
  #minefield .mines4 {
    background-position: -64px -23px; }
  #minefield .mines5 {
    background-position: -80px -23px; }
  #minefield .mines6 {
    background-position: -96px -23px; }
  #minefield .mines7 {
    background-position: -112px -23px; }
  #minefield .mines8 {
    background-position: -128px -23px; }
  #minefield .mine-hit {
    background-position: -32px -39px; }
  #minefield .mine-misflagged {
    background-position: -48px -39px; }
  #minefield .mine {
    background-position: -64px -39px; }
  #minefield .flag {
    background-position: -16px -39px; }
  #minefield .question {
    background-position: -80px -39px; }

#mine-count, #timer {
  overflow: hidden;
  position: absolute;
  top: 1px;
  z-index: 1;
  border: 1px solid;
  border-color: #808080 #fff #fff #808080; }

#mine-count {
  left: 0; }

#timer {
  right: 0; }

.numbers div {
  float: left;
  width: 13px;
  height: 23px;
  background: url("http://dl.dropboxusercontent.com/u/13142135/codepen/minesweeper.png") no-repeat; }

#minesweeper-reset-button {
  background: url("http://dl.dropboxusercontent.com/u/13142135/codepen/minesweeper.png") no-repeat;
  height: 26px;
  width: 26px;
  margin: 0 auto; }
  #minesweeper-reset-button.face-smile {
    background-position: 0 -55px; }
  #minesweeper-reset-button.face-pressed {
    background-position: -26px -55px; }
  #minesweeper-reset-button.face-surprised {
    background-position: -52px -55px; }
  #minesweeper-reset-button.face-sad {
    background-position: -78px -55px; }
  #minesweeper-reset-button.face-sunglasses {
    background-position: -104px -55px; }

.numbers .t0 {
  background-position: 0 0; }

.numbers .t1 {
  background-position: -13px 0; }

.numbers .t2 {
  background-position: -26px 0; }

.numbers .t3 {
  background-position: -39px 0; }

.numbers .t4 {
  background-position: -52px 0; }

.numbers .t5 {
  background-position: -65px 0; }

.numbers .t6 {
  background-position: -78px 0; }

.numbers .t7 {
  background-position: -91px 0; }

.numbers .t8 {
  background-position: -104px 0; }

.numbers .t9 {
  background-position: -117px 0; }

.numbers .tm {
  background-position: -130px 0; }

#play {
  font-size: 2.65em;
  display: inline-block;
  border-bottom: 0.07em solid black;
  cursor: url("../icons/point.png"), auto; }
  #play:active {
    cursor: url("../icons/grab.png"), auto; }

.links-wrap {
  z-index: 0; }
  .links-wrap .links-title {
    font-weight: 500; }
  .links-wrap .links-list li {
    padding: .2em 0;
    margin: 0; }

@-webkit-keyframes svg {
  0% {
    fill: rgba(255, 133, 124, 0);
    stroke: rgba(255, 133, 124, 0);
    stroke-dashoffset: 272;
    stroke-dasharray: 50; }
  50% {
    fill: rgba(255, 133, 124, 0); }
  100% {
    stroke: #ff857c;
    stroke-dashoffset: 600;
    stroke-dasharray: 0;
    fill: #ff857c; } }

@keyframes svg {
  0% {
    fill: rgba(255, 133, 124, 0);
    stroke: rgba(255, 133, 124, 0);
    stroke-dashoffset: 272;
    stroke-dasharray: 50; }
  50% {
    fill: rgba(255, 133, 124, 0); }
  100% {
    stroke: #ff857c;
    stroke-dashoffset: 600;
    stroke-dasharray: 0;
    fill: #ff857c; } }

@-webkit-keyframes rotateAndLeave {
  0% {
    -webkit-transform: translate(-50%, -80%) rotate(0deg);
    transform: translate(-50%, -80%) rotate(0deg);
    display: block; }
  20% {
    -webkit-transform: translate(-50%, -50%) rotate(0deg);
    transform: translate(-50%, -50%) rotate(0deg); }
  40% {
    -webkit-transform: translate(-50%, -50%) rotate(90deg);
    transform: translate(-50%, -50%) rotate(90deg); }
  70% {
    -webkit-transform: translate(-50%, -50%) rotate(180deg);
    transform: translate(-50%, -50%) rotate(180deg); }
  100% {
    -webkit-transform: translate(200%, -200%);
    transform: translate(200%, -200%);
    display: none; } }

@keyframes rotateAndLeave {
  0% {
    -webkit-transform: translate(-50%, -80%) rotate(0deg);
    transform: translate(-50%, -80%) rotate(0deg);
    display: block; }
  20% {
    -webkit-transform: translate(-50%, -50%) rotate(0deg);
    transform: translate(-50%, -50%) rotate(0deg); }
  40% {
    -webkit-transform: translate(-50%, -50%) rotate(90deg);
    transform: translate(-50%, -50%) rotate(90deg); }
  70% {
    -webkit-transform: translate(-50%, -50%) rotate(180deg);
    transform: translate(-50%, -50%) rotate(180deg); }
  100% {
    -webkit-transform: translate(200%, -200%);
    transform: translate(200%, -200%);
    display: none; } }

@-webkit-keyframes IntroFadeIn {
  0% {
    opacity: 0; }
  80% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@keyframes IntroFadeIn {
  0% {
    opacity: 0; }
  80% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@-webkit-keyframes titleFadeUp {
  0% {
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%); }
  65% {
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%); }
  100% {
    top: 30px;
    -webkit-transform: none;
    transform: none; } }

@keyframes titleFadeUp {
  0% {
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%); }
  65% {
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%); }
  100% {
    top: 30px;
    -webkit-transform: none;
    transform: none; } }

@-webkit-keyframes iconsloop {
  0% {
    background-image: url("../icons/gifgif.gif"); }
  20% {
    background-image: url("../icons/clipart.jpg"); }
  40% {
    background-image: url("../icons/paintbrush.jpg"); }
  60% {
    background-image: url("../icons/12.jpg"); }
  80% {
    background-image: url("../icons/face.jpg"); }
  100% {
    background-image: url("../icons/14.jpg"); } }

@keyframes iconsloop {
  0% {
    background-image: url("../icons/gifgif.gif"); }
  20% {
    background-image: url("../icons/clipart.jpg"); }
  40% {
    background-image: url("../icons/paintbrush.jpg"); }
  60% {
    background-image: url("../icons/12.jpg"); }
  80% {
    background-image: url("../icons/face.jpg"); }
  100% {
    background-image: url("../icons/14.jpg"); } }

.animsition {
  overflow: hidden !important; }

@media screen and (max-width: 575px) {
  #game, #play {
    display: none; }
  .full-img .image-holder .marquee-text {
    font-size: 3em; } }

/*# sourceMappingURL=data:application/json;base64, */